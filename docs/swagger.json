{
    "swagger": "2.0",
    "info": {
        "description": "Fiufit's Users service documentation. This service manages accounts, profiles, admin authentication, etc.",
        "title": "Fiufit Users API",
        "contact": {},
        "version": "dev"
    },
    "host": "fiufit-users.fly.dev",
    "basePath": "/",
    "paths": {
        "/{version}/admin/login": {
            "post": {
                "description": "Log in as administrator. Administrators and their credentials are created by other administrators",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Lo gin as administrator",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body params",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accounts.AdminLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "$ref": "#/definitions/accounts.AdminLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            }
        },
        "/{version}/admin/register": {
            "post": {
                "description": "Register a new admin. This endpoint should only be called after a gateway processed the corresponding authorization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Register an administrator",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Admin Email",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Admin Password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Important Note: OK responses are wrapped in {\"data\": ... }",
                        "schema": {
                            "$ref": "#/definitions/accounts.AdminRegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/contracts.ErrResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "accounts.AdminLoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "accounts.AdminLoginResponse": {
            "type": "object",
            "properties": {
                "jwt": {
                    "type": "string"
                }
            }
        },
        "accounts.AdminRegisterResponse": {
            "type": "object",
            "properties": {
                "admin": {
                    "$ref": "#/definitions/models.Administrator"
                }
            }
        },
        "contracts.ErrPayload": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "contracts.ErrResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/contracts.ErrPayload"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "models.Administrator": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}